From fc3af2492a42eb042d6ae1ee816224f951a30c64 Mon Sep 17 00:00:00 2001
From: Clayton Craft <clayton@craftyguy.net>
Date: Sun, 6 Sep 2020 15:23:43 -0700
Subject: [PATCH] avoid opendir since it may be called during fork exec

Some applications (e.g. Phosh) call PAM from a thread for async
unlocking, and opendir causes deadlocks.
---
 libpam/pam_modutil_sanitize.c | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/libpam/pam_modutil_sanitize.c b/libpam/pam_modutil_sanitize.c
index 58b9537..fb58a72 100644
--- a/libpam/pam_modutil_sanitize.c
+++ b/libpam/pam_modutil_sanitize.c
@@ -128,6 +128,7 @@ close_fds(void)
 	/* The lower limit is the same as for _POSIX_OPEN_MAX. */
 	const unsigned int MIN_FD_NO = 20;
 
+#if defined(__GLIBC__)
 	/* If /proc is mounted, we can optimize which fd can be closed. */
 	if ((dir = opendir("/proc/self/fd")) != NULL) {
 		if ((dfd = dirfd(dir)) >= 0 && is_in_procfs(dfd) > 0) {
@@ -141,6 +142,7 @@ close_fds(void)
 		}
 		closedir(dir);
 	}
+#endif
 
 	/* If /proc isn't available, fallback to the previous behavior. */
 	if (dfd < 0) {
-- 
2.28.0

