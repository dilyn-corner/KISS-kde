--- a/src/3rdparty/chromium/third_party/blink/renderer/platform/wtf/stack_util.cc
+++ b/src/3rdparty/chromium/third_party/blink/renderer/platform/wtf/stack_util.cc
@@ -14,7 +14,7 @@
 #include <stddef.h>
 #include <windows.h>
 #include <winnt.h>
-#elif defined(__GLIBC__)
+#elif defined(OS_LINUX)
 extern "C" void* __libc_stack_end;  // NOLINT
 #endif
 
@@ -29,7 +29,7 @@
 // FIXME: On Mac OSX and Linux, this method cannot estimate stack size
 // correctly for the main thread.
 
-#elif defined(__GLIBC__) || defined(OS_ANDROID) || defined(OS_FREEBSD) || \
+#elif defined(OS_LINUX) || defined(OS_ANDROID) || defined(OS_FREEBSD) || \
     defined(OS_FUCHSIA)
   // pthread_getattr_np() can fail if the thread is not invoked by
   // pthread_create() (e.g., the main thread of blink_unittests).
@@ -97,7 +97,7 @@
 }
 
 void* GetStackStart() {
-#if defined(__GLIBC__) || defined(OS_ANDROID) || defined(OS_FREEBSD) || \
+#if defined(OS_LINUX) || defined(OS_ANDROID) || defined(OS_FREEBSD) || \
     defined(OS_FUCHSIA)
   pthread_attr_t attr;
   int error;
@@ -118,7 +118,7 @@
 #if defined(OS_FREEBSD)
   pthread_attr_destroy(&attr);
 #endif
-#if defined(__GLIBC__)
+#if 0
   // pthread_getattr_np can fail for the main thread. In this case
   // just like NaCl we rely on the __libc_stack_end to give us
   // the start of the stack.
